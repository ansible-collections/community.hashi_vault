---
name: Ansible collection docs build (Push)
on:
  workflow_call:
    inputs:
      collection-name:
        description: The collection name in the form namespace.collection.
        required: false
        type: string
        default: ${{ github.event.repository.name }}
      collection-path:
        description: This is the relative path component of the collection in question, for example community/general.
        required: false
        type: string
      python:
        description: The version of Python to install.
        required: false
        type: string
        default: '3.9'
      ansible-ref:
        description: The ref from which to install ansible, for example "stable-2.12" or "milestone".
        required: false
        type: string
        default: milestone
      init-dest-dir:
        description: A directory relative to the checkout where the init process has already been run.
        required: false
        type: string
      artifact-name:
        description: The name of the artifact to upload.
        required: false
        type: string
        default: ${{ github.event.repository.name }}_docs_${{ github.sha }}

    outputs:
      artifact-name:
        description: The same artifact name as passed in, available as an output.
        value: ${{ inputs.artifact-name }}
      artifact-url:
        description: The URL to the build artifacts.
        value: ${{ jobs.build-ansible-docs.outputs.artifact-url }}

jobs:
  build-ansible-docs:
    name: Build Ansible Docs
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      artifact-url: ${{ steps.build-head.outputs.artifact-url }}
    steps:
      - name: Variable setup
        id: vars
        uses: actions/github-script@v5
        with:
          script: |
            const inputs = ${{ toJSON(inputs) }}
            var colpath = inputs['collection-path']
            var colname = inputs['collection-name']

            if (colname == '') {
                colname = process.env.GITHUB_REPOSITORY.split('/')[1]
            }

            if (colpath == '') {
                colpath = colname.replace('.', '/')
            }

            core.exportVariable('ANSIBLE_COLLECTIONS_PATHS', process.env.GITHUB_WORKSPACE)

            const checkoutPath = `ansible_collections/${colpath}`

            core.setOutput('col-name', colname)
            core.setOutput('col-path', colpath)
            core.setOutput('checkout-path', checkoutPath)

            var initPath = '${{ runner.temp }}/docsbuild'
            var skipInit = false

            if (inputs['init-dest-dir'] != '') {
                initPath = `${checkoutPath}/${inputs['init-dest-dir']}`
                skipInit = true
            }

            core.setOutput('init-dir', initPath)
            core.setOutput('skip-init', skipInit)

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ inputs.python }}

      - name: Install Ansible
        run: pip install https://github.com/ansible/ansible/archive/${{ inputs.ansible-ref }}.tar.gz --disable-pip-version-check

      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: ${{ steps.vars.outputs.checkout-path }}

      - name: Initialize the build environment
        id: init
        uses: ansible-collections/community.hashi_vault/.github/actions/docs/ansible-docs-build-init@main
        with:
          collections: ${{ steps.vars.outputs.col-name }}
          dest-dir: ${{ steps.vars.outputs.init-dir }}
          skip-init: ${{ steps.vars.outputs.skip-init }}

      - name: Build
        id: build
        uses: ansible-collections/community.hashi_vault/.github/actions/docs/ansible-docs-build-html@main
        with:
          build-script: ${{ steps.init.outputs.build-script }}
          build-html: ${{ steps.init.outputs.build-html }}
          artifact-name: ${{ inputs.artifact-name }}
