---
name: Ansible collection docs build (PR)
on:
  workflow_call:
    inputs:
      collection-name:
        required: false
        type: string
        default: ${{ github.event.repository.name }}
      collection-path:
        required: false
        type: string
      python:
        required: false
        type: string
        default: '3.9'
      ansible-ref:
        required: false
        type: string
        default: milestone


    # outputs:

jobs:
  build-ansible-docs:
    name: Build Ansible Docs
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      # - name: troubleshooting
      #   id: wot
      #   uses: actions/github-script@v5
      #   with:
      #     script: |
      #       return {
      #           context: context,
      #           github: github,
      #           env: process.env
      #       }

      # - name: show
      #   run: |
      #     echo <<EOF
      #     ${{ toJSON(fromJSON(steps.wot.outputs.result)) }}
      #     EOF

      - name: Variable setup
        id: vars
        uses: actions/github-script@v5
        with:
          script: |
            const inputs = JSON.parse(`{"inputs": ${{ toJSON(inputs) }}}`).inputs
            var colpath = inputs['collection-path']
            if (colpath == '') {
                colpath = inputs['collection-name'].replace('.', '/')
            }

            core.exportVariable('ANSIBLE_COLLECTIONS_PATHS', process.env.GITHUB_WORKSPACE)
            core.setOutput('col-path', colpath)

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ inputs.python }}

      - name: Install Ansible
        run: pip install https://github.com/ansible/ansible/archive/${{ inputs.ansible-ref }}.tar.gz --disable-pip-version-check

      - name: Checkout BASE test
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.base.sha }}
          path: ansible_collections/${{ steps.vars.outputs.col-path }}

      - name: Initialize the build environment (BASE)
        id: init-base
        uses: ansible-collections/community.hashi_vault/.github/actions/docs/ansible-docs-build-init@docs/build-v2
        with:
          collections: ${{ inputs.collection-name }}
          dest-dir: ${{ github.workspace }}/docsbuild/base

      - name: Build BASE test
        id: build-base
        # env:
        #   ANSIBLE_COLLECTIONS_PATHS: ${{ github.workspace }} # ansible_collections/community/hashi_vault
        uses: ansible-collections/community.hashi_vault/.github/actions/docs/ansible-docs-build-html@docs/build-v2
        with:
          build-script: ${{ steps.init-base.outputs.build-script }}
          build-html: ${{ steps.init-base.outputs.build-html }}
          artifact-upload: 'false'

      - name: Checkout HEAD test
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          path: ansible_collections/${{ steps.vars.outputs.col-path }}

      - name: Initialize the build environment (HEAD)
        id: init-head
        uses: ansible-collections/community.hashi_vault/.github/actions/docs/ansible-docs-build-init@docs/build-v2
        with:
          collections: ${{ inputs.collection-name }}
          dest-dir: ${{ github.workspace }}/docsbuild/head

      - name: Build HEAD test
        id: build-head
        # env:
        #   ANSIBLE_COLLECTIONS_PATHS: ${{ github.workspace }} # ansible_collections/community/hashi_vault
        uses: ansible-collections/community.hashi_vault/.github/actions/docs/ansible-docs-build-html@docs/build-v2
        with:
          build-script: ${{ steps.init-head.outputs.build-script }}
          build-html: ${{ steps.init-head.outputs.build-html }}

      - run: |
          echo "::warning::BASE hash: ${{ steps.build-base.outputs.hash }}"
          echo "::warning::HEAD hash: ${{ steps.build-head.outputs.hash }}"

        # run: |
        #   echo "::echo::on"
        #   echo "${{ toJSON(steps) }}"
        #   export SCRIPT="${{ steps.init.outputs.build-script }}"
        #   echo "Build script: '$SCRIPT'"
        #   $SCRIPT
