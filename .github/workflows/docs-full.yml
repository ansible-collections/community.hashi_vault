---
name: Collection Docs (Full)
concurrency:
  group: docs-full-${{ github.ref }}
  cancel-in-progress: true
on:
  pull_request_target:
    types: [opened, synchronize, reopened]

env:
  NAMESPACE: community
  COLLECTION_NAME: hashi_vault
  NOT_A_FORK: ${{ github.repository == 'ansible-collections/community.hashi_vault' }}

jobs:
  docs:
    # This workflow must be subject to pre-review and approval before running.
    # This is accomplished with the "docs-build" GitHub deployment environment in the repo.
    # See comments on the "Check out PR" step as well.
    environment: docs-build
    name: Collection Docs Lint & Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up env vars
        uses: briantist/ezenv@v1
        with:
          env: |
            SITE_STUB=community-hashi-vault
            SITE_NAME_MAIN=${SITE_STUB}-main
            COLLECTION_PATH=ansible_collections/${NAMESPACE}/${COLLECTION_NAME}
            DOCS=${COLLECTION_PATH}/docs
            DOCS_PREVIEW=${DOCS}/preview
            DOCS_BUILD=${DOCS_PREVIEW}/build
            HTML=${DOCS_BUILD}/html
            BASE_DOCS_RENDERED=${{ runner.temp }}/html/base
            PR_DOCS_RENDERED=${{ runner.temp }}/html/pr

      - name: Check out code
        uses: actions/checkout@v2
        with:
          path: ${{ env.COLLECTION_PATH }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Ansible and other requirements
        working-directory: ${{ env.DOCS_PREVIEW }}
        run: |
          pip install https://github.com/ansible/ansible/archive/devel.tar.gz --disable-pip-version-check
          pip install -r requirements.txt --disable-pip-version-check

      - name: Build the preview docs (HEAD)
        env:
          ANSIBLE_COLLECTIONS_PATH: ${{ github.workspace }}
        run: ${DOCS_PREVIEW}/build.sh

      - name: Save the base build & hash and discard the build
        run: |
          echo "BASE_DOCS_HASH=${{ hashFiles(env.HTML) }}" >> $GITHUB_ENV
          mkdir -p "${BASE_DOCS_RENDERED}"
          rsync -avc --delete-after "${HTML}" "${BASE_DOCS_RENDERED}"

          rm -rf "${COLLECTION_PATH}"


      ######## IMPORTANT
      # This workflow executes code from the PR, in a privileged workflow.
      # This workflow must be subject to pre-review and approval before running.
      # This is accomplished with the "docs-build" GitHub deployment environment in the repo.
      # Please read ALL of this document before changing these:
      # https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
      - name: Check out PR
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          path: ${{ env.COLLECTION_PATH }}

      - name: Lint Collection Docs
        working-directory: ${{ env.COLLECTION_PATH }}
        run: antsibull-lint collection-docs -v .

      - name: Build the preview docs (${{ github.head_ref }})
        env:
          ANSIBLE_COLLECTIONS_PATH: ${{ github.workspace }}
        run: |
          # discard previous build if any
          rm -rf "${DOCS_BUILD}"
          ${DOCS_PREVIEW}/build.sh

      - name: Save the head hash
        run: |
          echo "HEAD_DOCS_HASH=${{ hashFiles(env.HTML) }}" >> $GITHUB_ENV
          mkdir -p "${PR_DOCS_RENDERED}"
          rsync -avc --delete-after "${HTML}" "${PR_DOCS_RENDERED}"

      - name: Should publish?
        run: |
          if [[ "${{ github.event_name }}" != "pull_request_target" ]] || [[ "${BASE_DOCS_HASH}" != "${HEAD_DOCS_HASH}" ]]
          then
            echo "PUBLISH=true" >> $GITHUB_ENV
          else
            echo "PUBLISH=false" >> $GITHUB_ENV
          fi

      - name: Generate docs diff
        if: fromJSON(env.PUBLISH)
        run: |
          echo 'DOC_DIFF<<EOF' >> ${GITHUB_ENV}
          git --no-pager diff --no-index "${BASE_DOCS_RENDERED}" "${PR_DOCS_RENDERED}" >> ${GITHUB_ENV} || true
          echo 'EOF' >> ${GITHUB_ENV}

      - name: Upload Docsite artifact
        if: fromJSON(env.PUBLISH)
        uses: actions/upload-artifact@v2
        with:
          name: html_docsite
          path: ${{ env.HTML }}
          retention-days: 7

      - name: Determine docsite subdomain
        run: |
          if [[ "${GITHUB_EVENT_NAME}" == "pull_request_target" ]]; then
            echo "SITE_NAME=${SITE_STUB}-pr${{ github.event.number }}" >> $GITHUB_ENV
          else
            echo "SITE_NAME=${SITE_NAME_MAIN}" >> $GITHUB_ENV
          fi

      - name: Install Node
        if: fromJSON(env.NOT_A_FORK)
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install Surge
        if: fromJSON(env.NOT_A_FORK)
        run: npm install -g surge

      - name: Publish site
        if: >-
          fromJSON(env.NOT_A_FORK)
          && fromJSON(env.PUBLISH)
        working-directory: ${{ env.HTML }}
        run: surge ./ ${SITE_NAME}.surge.sh --token ${{ secrets.SURGE_TOKEN }}

      # there might have been changes published before, which were removed in a subsequent commit
      - name: Unpublish site
        if: >-
          fromJSON(env.NOT_A_FORK)
          && !fromJSON(env.PUBLISH)
        continue-on-error: true
        run: surge teardown ${SITE_NAME}.surge.sh --token ${{ secrets.SURGE_TOKEN }}

      - name: Look for existing comment
        id: fc
        uses: peter-evans/find-comment@v1
        with:
          issue-number: ${{ github.event.number }}
          comment-author: 'github-actions[bot]'
          body-includes: "##Docs Build"

      - name: Remove previous comment
        if: >-
          fromJSON(env.NOT_A_FORK)
          && !fromJSON(env.PUBLISH)
          && steps.fc.outputs.comment-id
        uses: actions/github-script@v4
        with:
          script: |
            github.issues.deleteComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: ${{ steps.fc.outputs.comment-id }}
            })

      - name: Post a comment on the PR
        if: >-
          github.event_name == 'pull_request_target'
          && fromJSON(env.PUBLISH)
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.number }}
          edit-mode: replace
          body: |
            ##Docs Build üìù

            Thank you for contribution!‚ú®

            The **full** docs for **this PR** have been published here:
            https://${{ env.SITE_NAME }}.surge.sh

            You can compare to the docs for the `main` branch here:
            https://${{ env.SITE_NAME_MAIN }}.surge.sh

            The docsite for **this PR** is also available for download as an artifact from this run:
            https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

            <details>
            <summary>Click to see the diff comparison.</summary>

            ```diff
            ${{ env.DOC_DIFF }}
            ```

            </details>
