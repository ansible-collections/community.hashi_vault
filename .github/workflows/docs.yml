---
name: Collection Docs
on:
  # we want to ensure the docs are still good before doing a release
  # so we try to catch that with the changelog changes
  push:
    branches:
      - main
  pull_request_target:
    paths:
      - '.github/workflows/docs.yml'
      - 'docs/**'
      - 'CHANGELOG.rst'
      - 'changelogs/changelog.yaml'
  schedule:
    - cron: '0 13 * * *'

env:
  NAMESPACE: community
  COLLECTION_NAME: hashi_vault

jobs:
  docs:
    name: Collection Docs Lint & Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up env vars
        uses: briantist/ezenv@v1
        with:
          env: |
            SITE_STUB=community-hashi-vault
            COLLECTION_PATH=ansible_collections/${NAMESPACE}/${COLLECTION_NAME}
            DOCS=${COLLECTION_PATH}/docs
            DOCS_PREVIEW=${DOCS}/preview
            HTML=${DOCS_PREVIEW}/build/html

      - name: Check out code
        uses: actions/checkout@v2
        with:
          path: ${{ env.COLLECTION_PATH }}

      - name: Check out PR to temp location
        if: github.event_name == 'pull_request_target'
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          path: /tmp/pr

      - name: Apply docs changes from PR
        if: github.event_name == 'pull_request_target'
        working-directory: ${{ env.COLLECTION_PATH }}
        run: rsync -avc --delete-after /tmp/pr/docs/docsite/ docs/docsite/

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install antsibull
        run: pip install antsibull

      - name: Lint Collection Docs
        working-directory: ${{ env.COLLECTION_PATH }}
        run: antsibull-lint collection-docs -v .

      - name: Install Ansible and other requirements
        working-directory: ${{ env.DOCS_PREVIEW }}
        run: |
          pip install https://github.com/ansible/ansible/archive/devel.tar.gz --disable-pip-version-check
          pip install -r requirements.txt --disable-pip-version-check

      - name: Build the preview docs
        env:
          ANSIBLE_COLLECTIONS_PATH: ${{ github.workspace }}
        run: ${DOCS_PREVIEW}/build.sh

      - name: Upload Docsite artifact
        uses: actions/upload-artifact@v2
        with:
          name: html_docsite
          path: ${{ env.HTML }}
          retention-days: 7

      - name: Determine docsite subdomain
        run: |
          if [[ "${GITHUB_EVENT_NAME}" -eq "push" ]]; then
            echo "SITE_NAME=${SITE_STUB}-main" >> $GITHUB_ENV
          else
            echo "SITE_NAME=${SITE_STUB}-pr${{ github.event.number }}" >> $GITHUB_ENV
          fi

      - name: Look for existing comment
        if: github.event_name == 'pull_request_target'
        id: fc
        uses: peter-evans/find-comment@v1
        with:
          issue-number: ${{ github.event.number }}
          comment-author: 'github-actions[bot]'
          body-includes: "##Docs Build"

      - name: Post a comment on the PR
        if: github.event_name == 'pull_request_target'
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.number }}
          body: |
            ##Docs Build

            üìù First pass at a PR comment!

            Your doc build is available as an artifact on this run:
            https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}

            Site-to-be: https://${SITE_NAME}.surge.sh
          edit-mode: replace

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install Surge
        run: npm install -g surge

      - name: Publish site
        working-directory: ${{ env.HTML }}
        run: surge ./ --token ${{ secrets.SURGE_TOKEN }}
