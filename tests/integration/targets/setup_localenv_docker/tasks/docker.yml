---
- name: "Ensure output dirs exist"
  file:
    state: directory
    path: '{{ item }}'
  loop:
    - '{{ docker_compose_output }}'
    - '{{ vault_config_output }}'

- name: "Create the docker-compose definition"
  template:
    src: docker-compose.yml.j2
    dest: '{{ docker_compose_output }}/docker-compose.yml'

- name: "Persist vars (role_path is relative)"
  set_fact:
    vault_cert_file: '{{ vault_cert_file }}'
    vault_key_file: '{{ vault_key_file }}'

- name: "Generate certs"
  import_role:
    name: setup_vault_server_cert
  vars:
    vault_hostname: '{{ vault_container_name }}'

- name: "Template vault config"
  template:
    src: vault_config.hcl.j2
    dest: '{{ vault_config_output }}/vault_config.hcl'

- name: "Shut down"
  when: docker_compose in ['clean', 'down']
  community.docker.docker_compose:
    project_name: hashi_vault
    state: absent
    # definition: '{{ docker_compose_definition }}'
    project_src: '{{ docker_compose_output }}'

- name: "Bring up"
  when: docker_compose in ['clean', 'up']
  community.docker.docker_compose:
    project_name: hashi_vault
    # definition: '{{ docker_compose_definition }}'
    project_src: '{{ docker_compose_output }}'

- name: "Template integration_config"
  template:
    src: integration_config.yml.j2
    dest: '{{ output_dir }}/integration_config.yml'
    force: yes
