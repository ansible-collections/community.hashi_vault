---
- name: Connection Tests
  module_defaults:
    assert:
      quiet: yes
  vars:
    kwargZ: {}
    test_cmd: &test
      set_fact:
        result: "{{ lookup('vault_test_connection', '', **kwargs) }}"
    assert_cmd: &assert
      assert:
        that: result.status.initialized
  block:
    - name: HTTP connection
      vars:
        kwargs: {}
      block:
        - name: Set the HTTP connection address
          set_fact:
            ansible_hashi_vault_url: '{{ vault_test_server_http }}'

        - name: test HTTP
          <<: *test

        - <<: *assert

        - name: test HTTP with proxy
          <<: *test
          vars:
            kwargs:
              url: '{{ vault_proxy_alt_vault_http | default(vault_test_server_http) }}'
              proxies: '{{ vault_proxy_server }}'

        - <<: *assert

        - name: test HTTP with wrong proxy
          <<: *test
          vars:
            vault_test_connection_want_exception: yes
            ansible_hashi_vault_proxies: http://127.0.0.1:4567
            ansible_hashi_vault_retries: 2

        - assert:
            that:
              - result is failed
              - result.msg is search('Cannot connect to proxy')
              - result.retries == 2

    - name: HTTPS connection
      when: vault_run_https_tests | bool
      vars:
        kwargs:
          ca_cert: '{{ vault_cert_file }}'
      block:
        - debug:
            var: kwargs

        - name: Set the HTTPS connection address
          set_fact:
            ansible_hashi_vault_addr: '{{ vault_test_server_https }}'

        - debug:
            var: kwargs

        - name: test HTTPS with no cert validation
          <<: *test
          vars:
            ansible_hashi_vault_validate_certs: False

        - <<: *assert

        - debug:
            var: kwargs

        - name: test HTTPS with cert validation
          <<: *test
          vars:
            vault_test_connection_want_args: yes
            vault_test_connection_want_exception: yes

        - <<: *assert

        - name: test HTTPS with proxy & {{ scenario }}
          <<: *test
          vars:
            kwargs:
              url: '{{ vault_proxy_alt_vault_https | default(vault_test_server_http) }}'
              proxies: '{{ vault_proxy_server }}'

        - <<: *assert

        - name: test HTTPS with wrong proxy & {{ scenario }}
          <<: *test
          vars:
            vault_test_connection_want_exception: yes
            ansible_hashi_vault_proxies: http://127.0.0.1:4567
            ansible_hashi_vault_retries: 2

        - assert:
            that:
              - result is failed
              - result.msg is search('Cannot connect to proxy')
              - result.retries == 2

#     - name: 'test {{ auth_type }} auth with retries'
#       include_tasks: '{{ auth_type }}_test.yml'
#       args:
#         apply:
#           vars:
#             ansible_hashi_vault_retries: 2

#     - name: 'test {{ auth_type }} auth without SSL (lookup parameters)'
#       include_tasks: '{{ auth_type }}_test.yml'

#     - name: 'test {{ auth_type }} auth without SSL (lookup parameters, with string proxy)'
#       include_tasks: '{{ auth_type }}_test.yml'
#       vars:
#         conn_params: 'url={{ vault_proxy_alt_vault_http | default(vault_test_server_http) }} proxies={{ vault_proxy_server }} '

#     - name: 'test {{ auth_type }} auth without SSL (ansible variable)'
#       include_tasks: '{{ auth_type }}_test.yml'
#       args:
#         apply:
#           vars:
#             conn_params: ''

# - name: HTTPS connection
#   when: vault_run_https_tests | bool
#   block:
#     - name: Set the HTTPS connection address
#       set_fact:
#         ansible_hashi_vault_url: '{{ vault_test_server_https }}'

#     - name: 'test {{ auth_type }} auth with certs (validation enabled, lookup parameters)'
#       include_tasks: '{{ auth_type }}_test.yml'
#       vars:
#         conn_params: 'ca_cert={{ vault_cert_file }} validate_certs=True '

#     - name: 'test {{ auth_type }} auth with certs (validation enabled, lookup parameters, with string proxy)'
#       include_tasks: '{{ auth_type }}_test.yml'
#       vars:
#         conn_params: 'url={{ vault_proxy_alt_vault_https | default(vault_test_server_https) }} ca_cert={{ vault_cert_file }} validate_certs=True proxies={{ vault_proxy_server }} '

#     - name: Set proxies variable
#       set_fact:
#         ansible_hashi_vault_proxies:
#           http: '{{ vault_proxy_server }}'
#           https: '{{ vault_proxy_server }}'

#     - name: 'test {{ auth_type }} auth with certs (validation enabled, lookup parameters, with dict proxy via ansible vars)'
#       include_tasks: '{{ auth_type }}_test.yml'
#       vars:
#         conn_params: 'url={{ vault_proxy_alt_vault_https | default(vault_test_server_https) }} ca_cert={{ vault_cert_file }} validate_certs=True '

#     - name: Reset proxies variable
#       set_fact:
#         ansible_hashi_vault_proxies: null

#     - name: 'test {{ auth_type }} auth with certs (validation enabled, ansible variables)'
#       include_tasks: '{{ auth_type }}_test.yml'
#       args:
#         apply:
#           vars:
#             conn_params: 'ca_cert={{ vault_cert_file }} '

#     - name: 'test {{ auth_type }} auth with certs (validation disabled, lookup parameters)'
#       include_tasks: '{{ auth_type }}_test.yml'
#       vars:
#         ansible_hashi_vault_validate_certs: False
#         conn_params: ''
