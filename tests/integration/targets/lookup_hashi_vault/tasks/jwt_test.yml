- name: "Test block"
  vars:
    role_id: test-role
    jwt: '{{ lookup("file", "token.jwt") }}'
    jwt_invalid: '{{ lookup("file", "token_invalid.jwt") }}'
    is_default_path: "{{ this_path == default_path }}"
    common: "{{ conn_params ~ ('' if is_default_path else 'mount_point=' ~ this_path ~ ' ') }}"
  block:
    - name: 'Fetch secrets using "hashi_vault" lookup'
      set_fact:
        secret1: "{{ lookup('community.hashi_vault.hashi_vault', common ~ 'secret=' ~ vault_kv2_path ~ '/secret1 auth_method=jwt jwt=' ~ jwt ~ ' role_id=' ~ role_id) }}"
        secret2: "{{ lookup('community.hashi_vault.hashi_vault', common ~ 'secret=' ~ vault_kv2_path ~ '/secret2 auth_method=jwt jwt=' ~ jwt ~ ' role_id=' ~ role_id) }}"

    - name: 'Check secret values'
      fail:
        msg: 'unexpected secret values'
      when: secret1['value'] != 'foo1' or secret2['value'] != 'foo2'

    # the purpose of this test is to catch when the plugin accepts mount_point but does not pass it into hvac
    # we set the policy of the default mount to deny access to this secret and so we expect failure when the mount
    # is default, and success when the mount is alternate
    - name: 'Check auth mount differing secret value'
      vars:
        secret5: "{{ lookup('community.hashi_vault.hashi_vault', common ~ 'secret=' ~ vault_kv2_path ~ '/secret5', auth_method='jwt', jwt=jwt, role_id=role_id) }}"
      debug:
        msg:
          - "Checking secret5 with {{ auth_type }} auth via mount path '{{ this_path }}'"
          - "{{ secret5 }}"
      register: secret5_status
      ignore_errors: true

    - assert:
        fail_msg: "A token from mount path '{{ this_path}}' had incorrect access to secret5"
        that: >-
          (is_default_path and (secret5_status is failed))
          or (not is_default_path and (secret5_status is not failed))

    - name: 'Failure expected when erroneous credentials are used'
      vars:
        secret_wrong_cred: "{{ lookup('community.hashi_vault.hashi_vault', common ~ 'secret=' ~ vault_kv2_path ~ '/secret2 auth_method=jwt jwt=' ~ jwt_invalid ~ ' role_id=' ~ role_id) }}"
      debug:
        msg: 'Failure is expected ({{ secret_wrong_cred }})'
      register: test_wrong_cred
      ignore_errors: true

    - name: 'Failure expected when unauthorized secret is read'
      vars:
        secret_unauthorized: "{{ lookup('community.hashi_vault.hashi_vault', common ~ 'secret=' ~ vault_kv2_path ~ '/secret3 auth_method=jwt jwt=' ~ jwt ~ ' role_id=' ~ role_id) }}"
      debug:
        msg: 'Failure is expected ({{ secret_unauthorized }})'
      register: test_unauthorized
      ignore_errors: true

    - name: 'Failure expected when non-existent secret is read'
      vars:
          secret_inexistent: "{{ lookup('community.hashi_vault.hashi_vault', common ~ 'secret=' ~ vault_kv2_path ~ '/non_existent_secret4 auth_method=jwt jwt=' ~ jwt ~ ' role_id=' ~ role_id) }}"
      debug:
        msg: 'Failure is expected ({{ secret_inexistent }})'
      register: test_inexistent
      ignore_errors: true

    - name: 'Check expected failures'
      assert:
        msg: "an expected failure didn't occur"
        that:
          - test_wrong_cred is failed
          - test_unauthorized is failed
          - test_inexistent is failed
